name: Release Dev Pipeline

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to release from'
        required: true

jobs:
  release_dev:
    runs-on: ubuntu-latest
    name: Release Dev Version
    steps:
      - name: Checkout PR Code 🛎️
        uses: actions/checkout@v3
        with:
          # Check out the code from the PR's head branch
          ref: refs/pull/${{ github.event.inputs.pr_number }}/head
          fetch-depth: 0
          
      - name: Setup pnpm 🔧
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js 🔧
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          check-latest: true

      - name: Install Dependencies 🪄
        run: pnpm install --frozen-lockfile

      - name: Build Package 💎
        run: pnpm run build

      - name: Get Package Version 📦
        id: get_version
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Construct New Version 🛠️
        id: new_version
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          PR_NUMBER=${{ github.event.inputs.pr_number }}
          NEW_VERSION="${{ steps.get_version.outputs.version }}-dev.${PR_NUMBER}.${BUILD_NUMBER}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json Version 📝
        run: |
          pnpm version "${{ steps.new_version.outputs.new_version }}" --no-git-tag-version

      - name: Configure npm to publish to GitHub Packages 🔑
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Publish Package to GitHub Packages 🚀
        run: pnpm publish --registry https://npm.pkg.github.com --access public
